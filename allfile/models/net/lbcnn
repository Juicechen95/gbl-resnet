#-----------------Cifar-10---------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------
=> Creating model from file: models/resnet-binary-felix.lua	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> output]
  (1): cudnn.SpatialConvolution(3 -> 384, 3x3, 1,1, 1,1)
  (2): nn.SpatialBatchNormalization (4D) (384)
  (3): cudnn.ReLU
  (4): nn.Sequential {
    [input -> (1) -> (2) -> output]
    (1): nn.ConcatTable {
      input
        |`-> (1): nn.Sequential {
        |      [input -> (1) -> (2) -> (3) -> (4) -> output]
        |      (1): nn.SpatialBatchNormalization (4D) (384)
        |      (2): cudnn.RandomBinaryConvolution(384 -> 704, 3x3, 1,1, 1,1) without bias
        |      (3): cudnn.ReLU
        |      (4): cudnn.SpatialConvolution(704 -> 384, 1x1)
        |    }
         `-> (2): nn.Identity
         ... -> output
    }
    (2): nn.CAddTable
  }
  (5): cudnn.SpatialAveragePooling(5x5, 5,5)
  (6): nn.Reshape(13824)
  (7): nn.Dropout(0.500000)
  (8): nn.Linear(13824 -> 512)
  (9): cudnn.ReLU
  (10): nn.Dropout(0.500000)
  (11): nn.Linear(512 -> 10)
}





#-----------------svhn---------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------
=> Creating model from file: models/resnet-binary-felix.lua	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1)
  (2): nn.SpatialBatchNormalization (4D) (16)
  (3): cudnn.ReLU
  (4): nn.Sequential {
    [input -> (1) -> (2) -> output]
    (1): nn.ConcatTable {
      input
        |`-> (1): nn.Sequential {
        |      [input -> (1) -> (2) -> (3) -> (4) -> output]
        |      (1): nn.SpatialBatchNormalization (4D) (16)
        |      (2): cudnn.RandomBinaryConvolution(16 -> 512, 3x3, 1,1, 1,1) without bias
        |      (3): cudnn.ReLU
        |      (4): cudnn.SpatialConvolution(512 -> 16, 1x1)
        |    }
         `-> (2): nn.Identity
         ... -> output
    }
    (2): nn.CAddTable
  }
  (5): cudnn.SpatialAveragePooling(5x5, 5,5)
  (6): nn.Reshape(576)
  (7): nn.Dropout(0.500000)
  (8): nn.Linear(576 -> 512)
  (9): cudnn.ReLU
  (10): nn.Dropout(0.500000)
  (11): nn.Linear(512 -> 10)
}






#-----------------mnist---------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------
=> Creating model from file: models/resnet-binary-felix.lua	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1)
  (2): nn.SpatialBatchNormalization (4D) (16)
  (3): cudnn.ReLU
  (4): nn.Sequential {
    [input -> (1) -> (2) -> output]
    (1): nn.ConcatTable {
      input
        |`-> (1): nn.Sequential {
        |      [input -> (1) -> (2) -> (3) -> (4) -> output]
        |      (1): nn.SpatialBatchNormalization (4D) (16)
        |      (2): cudnn.RandomBinaryConvolution(16 -> 512, 3x3, 1,1, 1,1) without bias
        |      (3): cudnn.ReLU
        |      (4): cudnn.SpatialConvolution(512 -> 16, 1x1)
        |    }
         `-> (2): nn.Identity
         ... -> output
    }
    (2): nn.CAddTable
  }
  (5): cudnn.SpatialAveragePooling(5x5, 5,5)
  (6): nn.Reshape(576)
  (7): nn.Dropout(0.500000)
  (8): nn.Linear(576 -> 128)
  (9): cudnn.ReLU
  (10): nn.Dropout(0.500000)
  (11): nn.Linear(128 -> 10)
}

